// This file is fully generated by running scannergen v1.5.1

// User-defined %HEADERS_FOR_CPP begins
#include "ParserIdDef.h"

// %HEADERS_FOR_SCANNER_CPP expanded BEGIN
#include "BracketBalance.h"
// %HEADERS_FOR_SCANNER_CPP expanded END
// User-defined %HEADERS_FOR_CPP ends

#include "Scanner.h"

namespace {

// ASCII TABLE:
//  0: \x00\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f
// 20:  !\"#$%&\'()*+,-./0123456789:;<=>?
// 40: @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_
// 60: `abcdefghijklmnopqrstuvwxyz{|}~\x7f
constinit const C_ScannerScanner::C_GotoPair
GOTO_STATE1[3] ={
    {'\x00', 51},
    {'\n', 23},
    {'\v', 51}},
GOTO_STATE2[3] ={
    {'\x00', 72},
    {'*', 73},
    {'+', 72}},
GOTO_STATE3[5] ={
    {'\x00', 72},
    {'*', 73},
    {'+', 72},
    {'/', 33},
    {'0', 72}},
GOTO_STATE4[3] ={
    {'\x00', 74},
    {']', 34},
    {'^', 74}},
GOTO_STATE5[3] ={
    {'\x00', 74},
    {']', 75},
    {'^', 74}},
GOTO_STATE6[6] ={
    {'\t', 6},
    {'\n', std::numeric_limits<int8_t>::max()},
    {'\v', 6},
    {'\x0e', std::numeric_limits<int8_t>::max()},
    {' ', 6},
    {'!', std::numeric_limits<int8_t>::max()}},
GOTO_STATE7[25] ={
    {'\t', 6},
    {'\n', std::numeric_limits<int8_t>::max()},
    {'\v', 6},
    {'\x0e', std::numeric_limits<int8_t>::max()},
    {' ', 6},
    {'!', std::numeric_limits<int8_t>::max()},
    {'\"', 40},
    {'#', std::numeric_limits<int8_t>::max()},
    {'\'', 39},
    {'(', std::numeric_limits<int8_t>::max()},
    {'/', 41},
    {'0', 5},
    {'1', 4},
    {':', std::numeric_limits<int8_t>::max()},
    {'>', 43},
    {'?', std::numeric_limits<int8_t>::max()},
    {'A', 2},
    {'[', 42},
    {'\\', std::numeric_limits<int8_t>::max()},
    {'_', 3},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 1},
    {'i', 38},
    {'j', 1},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE8[5] ={
    {' ', 47},
    {'\'', std::numeric_limits<int8_t>::max()},
    {'(', 47},
    {'\\', 48},
    {']', 47}},
GOTO_STATE9[5] ={
    {' ', 49},
    {'\"', 22},
    {'#', 49},
    {'\\', 50},
    {']', 49}},
GOTO_STATE10[22] ={
    {'\"', 47},
    {'#', std::numeric_limits<int8_t>::max()},
    {'\'', 47},
    {'(', std::numeric_limits<int8_t>::max()},
    {'U', 56},
    {'V', std::numeric_limits<int8_t>::max()},
    {'\\', 47},
    {']', std::numeric_limits<int8_t>::max()},
    {'a', 47},
    {'c', std::numeric_limits<int8_t>::max()},
    {'f', 47},
    {'g', std::numeric_limits<int8_t>::max()},
    {'n', 47},
    {'o', std::numeric_limits<int8_t>::max()},
    {'r', 47},
    {'s', std::numeric_limits<int8_t>::max()},
    {'t', 47},
    {'u', 55},
    {'v', 47},
    {'w', std::numeric_limits<int8_t>::max()},
    {'x', 54},
    {'y', std::numeric_limits<int8_t>::max()}},
GOTO_STATE11[22] ={
    {'\"', 49},
    {'#', std::numeric_limits<int8_t>::max()},
    {'\'', 49},
    {'(', std::numeric_limits<int8_t>::max()},
    {'U', 57},
    {'V', std::numeric_limits<int8_t>::max()},
    {'\\', 49},
    {']', std::numeric_limits<int8_t>::max()},
    {'a', 49},
    {'c', std::numeric_limits<int8_t>::max()},
    {'f', 49},
    {'g', std::numeric_limits<int8_t>::max()},
    {'n', 49},
    {'o', std::numeric_limits<int8_t>::max()},
    {'r', 49},
    {'s', std::numeric_limits<int8_t>::max()},
    {'t', 49},
    {'u', 64},
    {'v', 49},
    {'w', std::numeric_limits<int8_t>::max()},
    {'x', 69},
    {'y', std::numeric_limits<int8_t>::max()}},
GOTO_STATE12[2] ={
    {'\'', 21},
    {'(', std::numeric_limits<int8_t>::max()}},
GOTO_STATE13[8] ={
    {'\'', 21},
    {'(', std::numeric_limits<int8_t>::max()},
    {'0', 47},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 47},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 47},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE14[4] ={
    {'*', 52},
    {'+', std::numeric_limits<int8_t>::max()},
    {'/', 51},
    {'0', std::numeric_limits<int8_t>::max()}},
GOTO_STATE15[12] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'c', 25},
    {'d', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE16[12] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'d', 36},
    {'e', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE17[12] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'e', 37},
    {'f', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE18[14] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'f', 7},
    {'g', 9},
    {'n', 8},
    {'o', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE19[12] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'l', 32},
    {'m', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE20[12] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'u', 35},
    {'v', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE21[10] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE22[10] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 20},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE23[12] ={
    {'-', 44},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 31},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 30},
    {'G', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 29},
    {'g', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE24[10] ={
    {'-', 45},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE25[10] ={
    {'-', 45},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 20},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE26[12] ={
    {'-', 45},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 31},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 30},
    {'G', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 29},
    {'g', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE27[10] ={
    {'-', 46},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE28[10] ={
    {'-', 46},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 13},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE29[15] ={
    {'-', 46},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 17},
    {'8', 20},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 15},
    {'X', 19},
    {'Y', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 14},
    {'x', 18},
    {'y', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE30[11] ={
    {'-', 46},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 17},
    {'8', 20},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE31[10] ={
    {'-', 46},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 20},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE32[12] ={
    {'-', 46},
    {'.', std::numeric_limits<int8_t>::max()},
    {'0', 31},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 30},
    {'G', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 29},
    {'g', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE33[8] ={
    {'0', 12},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 10},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 11},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 9},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE34[8] ={
    {'0', 20},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 15},
    {'[', std::numeric_limits<int8_t>::max()},
    {'_', 16},
    {'`', std::numeric_limits<int8_t>::max()},
    {'a', 14},
    {'{', std::numeric_limits<int8_t>::max()}},
GOTO_STATE35[2] ={
    {'0', 28},
    {':', std::numeric_limits<int8_t>::max()}},
GOTO_STATE36[6] ={
    {'0', 47},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 47},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 47},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE37[6] ={
    {'0', 49},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 49},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 49},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE38[6] ={
    {'0', 55},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 55},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 55},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE39[6] ={
    {'0', 58},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 58},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 58},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE40[6] ={
    {'0', 59},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 59},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 59},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE41[6] ={
    {'0', 60},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 60},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 60},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE42[6] ={
    {'0', 61},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 61},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 61},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE43[6] ={
    {'0', 62},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 62},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 62},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE44[6] ={
    {'0', 63},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 63},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 63},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE45[6] ={
    {'0', 64},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 64},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 64},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE46[6] ={
    {'0', 65},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 65},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 65},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE47[6] ={
    {'0', 66},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 66},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 66},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE48[6] ={
    {'0', 67},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 67},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 67},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE49[6] ={
    {'0', 68},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 68},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 68},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE50[6] ={
    {'0', 70},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 70},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 70},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE51[6] ={
    {'0', 71},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 71},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 71},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE52[6] ={
    {'0', 76},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 76},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 76},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE53[6] ={
    {'0', 77},
    {':', std::numeric_limits<int8_t>::max()},
    {'A', 77},
    {'G', std::numeric_limits<int8_t>::max()},
    {'a', 77},
    {'g', std::numeric_limits<int8_t>::max()}},
GOTO_STATE54[2] ={
    {'>', 24},
    {'?', std::numeric_limits<int8_t>::max()}},
GOTO_STATE55[2] ={
    {'A', 27},
    {'[', std::numeric_limits<int8_t>::max()}},
GOTO_STATE56[2] ={
    {'[', 53},
    {'\\', std::numeric_limits<int8_t>::max()}},
GOTO_STATE57[2] ={
    {'a', 26},
    {'{', std::numeric_limits<int8_t>::max()}};

constinit const C_ScannerScanner::C_StateRec STATES[78] = {
    { GOTO_STATE7,	nullptr	},  // 0
    { GOTO_STATE21,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 1
    { GOTO_STATE24,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 2
    { GOTO_STATE33,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 3
    { GOTO_STATE28,	bux::createDecNum<TID_LEX_Num,bux::C_LexUTF32>	},  // 4
    { GOTO_STATE29,	bux::createDecNum<TID_LEX_Num,bux::C_LexUTF32>	},  // 5
    { GOTO_STATE6,	bux::createNothing<TID_LEX_Spaces,bux::C_LexUTF32>	},  // 6
    { GOTO_STATE21,	bux::createNothing<TID_KEYWORD_if,bux::C_LexUTF32>	},  // 7
    { GOTO_STATE15,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 8
    { GOTO_STATE21,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 9
    { GOTO_STATE24,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 10
    { GOTO_STATE33,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 11
    { GOTO_STATE27,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 12
    { GOTO_STATE28,	bux::createDecNum<TID_LEX_Num,bux::C_LexUTF32>	},  // 13
    { GOTO_STATE22,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 14
    { GOTO_STATE25,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 15
    { GOTO_STATE34,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 16
    { GOTO_STATE30,	bux::createOctNum<TID_LEX_Num,bux::C_LexUTF32>	},  // 17
    { GOTO_STATE23,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 18
    { GOTO_STATE26,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 19
    { GOTO_STATE31,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 20
    { nullptr,	bux::createCharLiteral<TID_LEX_Key,bux::C_LexUTF32>	},  // 21
    { nullptr,	bux::createEscapeString<TID_LEX_String,bux::C_LexUTF32, 1, 1>	},  // 22
    { nullptr,	bux::createNothing<'\n',bux::C_LexUTF32>	},  // 23
    { nullptr,	bux::createNothing<TID_LITERAL_3e3e,bux::C_LexUTF32>	},  // 24
    { GOTO_STATE19,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 25
    { GOTO_STATE34,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 26
    { GOTO_STATE34,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 27
    { GOTO_STATE34,	bux::createPlainString<TID_LEX_Charset,bux::C_LexUTF32>	},  // 28
    { GOTO_STATE23,	bux::createHexNum<TID_LEX_Num,bux::C_LexUTF32>	},  // 29
    { GOTO_STATE26,	bux::createHexNum<TID_LEX_Num,bux::C_LexUTF32>	},  // 30
    { GOTO_STATE32,	bux::createHexNum<TID_LEX_Num,bux::C_LexUTF32>	},  // 31
    { GOTO_STATE20,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 32
    { GOTO_STATE2,	bux::createNothing<TID_LEX_Spaces,bux::C_LexUTF32>	},  // 33
    { GOTO_STATE4,	bux::createPlainString<TID_LEX_Bracketed,bux::C_LexUTF32, 2, 2>	},  // 34
    { GOTO_STATE16,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 35
    { GOTO_STATE17,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 36
    { GOTO_STATE21,	bux::createNothing<TID_KEYWORD_include,bux::C_LexUTF32>	},  // 37
    { GOTO_STATE18,	bux::createPlainString<TID_LEX_Id,bux::C_LexUTF32>	},  // 38
    { GOTO_STATE8,	nullptr	},  // 39
    { GOTO_STATE9,	nullptr	},  // 40
    { GOTO_STATE14,	nullptr	},  // 41
    { GOTO_STATE56,	nullptr	},  // 42
    { GOTO_STATE54,	nullptr	},  // 43
    { GOTO_STATE57,	nullptr	},  // 44
    { GOTO_STATE55,	nullptr	},  // 45
    { GOTO_STATE35,	nullptr	},  // 46
    { GOTO_STATE12,	nullptr	},  // 47
    { GOTO_STATE10,	nullptr	},  // 48
    { GOTO_STATE9,	nullptr	},  // 49
    { GOTO_STATE11,	nullptr	},  // 50
    { GOTO_STATE1,	nullptr	},  // 51
    { GOTO_STATE2,	nullptr	},  // 52
    { GOTO_STATE5,	nullptr	},  // 53
    { GOTO_STATE52,	nullptr	},  // 54
    { GOTO_STATE46,	nullptr	},  // 55
    { GOTO_STATE39,	nullptr	},  // 56
    { GOTO_STATE40,	nullptr	},  // 57
    { GOTO_STATE41,	nullptr	},  // 58
    { GOTO_STATE42,	nullptr	},  // 59
    { GOTO_STATE43,	nullptr	},  // 60
    { GOTO_STATE44,	nullptr	},  // 61
    { GOTO_STATE38,	nullptr	},  // 62
    { GOTO_STATE45,	nullptr	},  // 63
    { GOTO_STATE47,	nullptr	},  // 64
    { GOTO_STATE48,	nullptr	},  // 65
    { GOTO_STATE49,	nullptr	},  // 66
    { GOTO_STATE50,	nullptr	},  // 67
    { GOTO_STATE51,	nullptr	},  // 68
    { GOTO_STATE53,	nullptr	},  // 69
    { GOTO_STATE36,	nullptr	},  // 70
    { GOTO_STATE37,	nullptr	},  // 71
    { GOTO_STATE2,	nullptr	},  // 72
    { GOTO_STATE3,	nullptr	},  // 73
    { GOTO_STATE5,	nullptr	},  // 74
    { GOTO_STATE4,	nullptr	},  // 75
    { GOTO_STATE13,	nullptr	},  // 76
    { GOTO_STATE9,	nullptr	}}; // 77

constinit const uint8_t GOTO_SIZE[78] = {
    25,	// 0
    10,	// 1
    10,	// 2
    8,	// 3
    10,	// 4
    15,	// 5
    6,	// 6
    10,	// 7
    12,	// 8
    10,	// 9
    10,	// 10
    8,	// 11
    10,	// 12
    10,	// 13
    10,	// 14
    10,	// 15
    8,	// 16
    11,	// 17
    12,	// 18
    12,	// 19
    10,	// 20
    0,	// 21
    0,	// 22
    0,	// 23
    0,	// 24
    12,	// 25
    8,	// 26
    8,	// 27
    8,	// 28
    12,	// 29
    12,	// 30
    12,	// 31
    12,	// 32
    3,	// 33
    3,	// 34
    12,	// 35
    12,	// 36
    10,	// 37
    14,	// 38
    5,	// 39
    5,	// 40
    4,	// 41
    2,	// 42
    2,	// 43
    2,	// 44
    2,	// 45
    2,	// 46
    2,	// 47
    22,	// 48
    5,	// 49
    22,	// 50
    3,	// 51
    3,	// 52
    3,	// 53
    6,	// 54
    6,	// 55
    6,	// 56
    6,	// 57
    6,	// 58
    6,	// 59
    6,	// 60
    6,	// 61
    6,	// 62
    6,	// 63
    6,	// 64
    6,	// 65
    6,	// 66
    6,	// 67
    6,	// 68
    6,	// 69
    6,	// 70
    6,	// 71
    3,	// 72
    5,	// 73
    3,	// 74
    3,	// 75
    8,	// 76
    5};	// 77

constinit const int8_t FIRST_FITS[2] = {
    33,
    34};

constinit C_ScannerScanner::F_IsFinal *const IS_FINALS[2] = {
    nullptr,
    bux::bracketsMatched};

} // namespace

C_ScannerScanner::C_ScannerScanner(bux::I_Parser &parser):
    bux::C_ScannerImpl<uint8_t,int8_t,bux::C_LexUTF32>(parser)
{
    stateTables(STATES, GOTO_SIZE);
    firstFits(FIRST_FITS, IS_FINALS, 2);
}
